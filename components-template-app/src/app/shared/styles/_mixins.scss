
@import "~@angular/material/theming";

//preload image
@mixin spinner-size($size){
	.spinner
  {
    position: absolute;
		width: $size;
    height: $size;
    font-size: $size;
		line-height: $size;
		@include cssCalc(top, "50% - #{($size/2)}");
  	@include cssCalc(left, "50% - #{($size/2)}");
  }
};

@mixin spinner-color($color){
  .spinner
  {
    color: $color;
  }
};

@mixin cssCalc($property, $expression) {
  #{$property}: calc(#{$expression});
}

@mixin transition($transitions...)
{
  -webkit-transition: $transitions;
  -moz-transition: $transitions;
  -ms-transition: $transitions;
  -o-transition: $transitions;
  transition: $transitions;
}

// Placeholder shadow DOM
@mixin _placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  // Firefox 18-
  &:-moz-placeholder {
    @content;
  }

  // Firefox 19+
  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

@mixin button($color, $background, $border, $important: null) {
  background-color: $background;
  border-color: $border;
  border-radius: 5px;
  border-style: solid;
  border-width: 1px;
  color: $color;
  font-size: $font-size-xs;
  font-weight: bold;
  letter-spacing: $letter-spacing-xxs;
  padding: 10px;
  transition: border-color .5s, color .5s, background-color .5s;

  &:hover {
    background-color: rgba($background, .6) $important;
    border-color: rgba($border, .7) $important;
    color: $color $important;
  }

  &:active,
  &.active,
  &:focus,
  &.focus {
    background-color: $background $important;
    border-color: $border $important;
    color: $color $important;
  }
}
@mixin button-outline($color, $background, $border, $important: null) {
  background-color: $background;
  border-color: $border;
  border-radius: 5px;
  border-style: solid;
  border-width: 1px;
  color: $color;
  font-size: $font-size-xs;
  font-weight: bold;
  letter-spacing: $letter-spacing-xxs;
  padding: 10px;
  transition: border-color .5s, color .5s, background-color .5s;

  &:hover {
    background-color: rgba($color, .6) $important;
    border-color: rgba($border, .7) $important;
    color: $background $important;
  }

  &:active,
  &.active,
  &:focus,
  &.focus {
    background-color: $color $important;
    border-color: $border $important;
    color: $background $important;
  }
}

@mixin mat-form-field-multiline-workaround($typography-config: null) {
  @if $typography-config == null {
    $typography-config: mat-typography-config();
  }

  .mat-form-field {
    // Copy-paste from @mat-form-field-typography();
    $line-height: mat-line-height($typography-config, input);      
    $subscript-font-scale: 0.75;

    & & {
      &-underline {
        position: static;
      }

      &-subscript-wrapper {
        $subscript-margin-top: 0.5em / $subscript-font-scale;
        $subscript-min-height: $line-height * 1em;
        $subscript-margin-bottom: -#{$subscript-margin-top + $line-height};

        position: static;
        min-height: $subscript-min-height;
        margin-bottom: $subscript-margin-bottom;
      }
    }

    &-appearance-legacy &-subscript-wrapper {
        // Copy-paste from @mat-form-field-legacy-typography();
        $line-spacing: ($line-height - 1) / 2;
        $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);

        $subscript-min-height: $line-height * 1em;
        $subscript-margin-bottom: -#{$subscript-margin-top + $line-height};

        min-height: $subscript-min-height;
        margin-bottom: $subscript-margin-bottom;
    }
  }
}